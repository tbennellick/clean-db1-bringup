/dts-v1/;

#include <nxp/nxp_mcxn94x.dtsi>
#include "db1-pinctrl.dtsi"
#include <zephyr/dt-bindings/i2c/i2c.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>

/ {
	model = "NXP FRDM_N94 board";
	compatible = "nxp,mcxn947", "nxp,mcx";
	cpus {
		/delete-node/ cpu@1;
	};

	chosen {
		zephyr,sram = &sram0;
		zephyr,flash = &flash;
		zephyr,flash-controller = &fmu;
		zephyr,code-partition = &slot0_partition;
		zephyr,uart-mcumgr = &flexcomm4_lpuart4;
		zephyr,console = &flexcomm4_lpuart4;
		zephyr,shell-uart = &flexcomm4_lpuart4;
		zephyr,canbus = &flexcan0;
		zephyr,code-cpu1-partition = &slot1_partition;
	};

	aliases{
		watchdog0 = &wwdt0;
		pwm-0 = &flexpwm1_pwm0;
		pwm-1 = &sc_timer;
		rtc = &rtc;
		led0 = &red_led;
		led1 = &green_led;
		led2 = &blue_led;
		sw0 = &user_button_2;
		sw1 = &user_button_3;
		sdhc0 = &usdhc0;
		mcuboot-button0 = &user_button_2;

	};

	leds {
		compatible = "gpio-leds";
		green_led: led_1 {
			gpios = <&gpio0 27 GPIO_ACTIVE_LOW>;
			label = "Green LED";
			status = "disabled";
		};
		blue_led: led_2 {
			gpios = <&gpio1 2 GPIO_ACTIVE_LOW>;
			label = "Blue LED";
			status = "disabled";
		};
		red_led: led_3 {
			gpios = <&gpio0 10 GPIO_ACTIVE_LOW>;
			label = "Red LED";
			status = "disabled";
		};
	};

	gpio_keys {
		compatible = "gpio-keys";
		user_button_2: button_0 {
			label = "User SW2";
			gpios = <&gpio0 23 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
			zephyr,code = <INPUT_KEY_0>;
			status = "disabled";
		};
		user_button_3: button_1 {
			label = "User SW3";
			gpios = <&gpio0 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
			zephyr,code = <INPUT_KEY_1>;
			status = "disabled";
		};
	};

	/*
	 * This node describes the GPIO pins of the LCD-PAR-S035 panel 8080 interface.
	 */
	nxp_lcd_8080_connector: lcd-8080-connector {
		compatible = "nxp,lcd-8080";
		#gpio-cells = <2>;
		gpio-map-mask = <0xffffffff 0xffffffc0>;
		gpio-map-pass-thru = <0 0x3f>;
		gpio-map =	<9  0 &gpio4 6 0>,	/* Pin 9, LCD touch INT */
					  <10  0 &gpio4 5 0>,	/* Pin 10, LCD backlight control */
					  <11  0 &gpio4 7 0>;	/* Pin 11, LCD and touch reset */
	};


};



/*
 * Default for this board is to allocate SRAM0-5 to cpu0 but the
 * application can have an application specific device tree to
 * allocate the SRAM0-7 differently.
 *
 * For example, SRAM0-6 could be allocated to cpu0 with only SRAM7
 * for cpu1. This would require the value of sram0 to have a DT_SIZE_K
 * of 384. You would have to make updates to cpu1 sram settings as well.
 */
&sram0 {
	compatible = "mmio-sram";
	reg = <0x20000000 DT_SIZE_K(320)>;
};

&mbox {
	status = "okay";
};

&gpio4 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio2 {
	status = "okay";
};

&green_led {
	status = "okay";
};

&red_led {
	status = "okay";
};

&user_button_2 {
	status = "okay";
};

&edma0 {
	status = "okay";
};

&flexcomm1 {
	status = "okay";
};

&flexcomm1_lpspi1 {
	status = "okay";
};
&flexcomm2 {
	status = "disabled";
};

&flexcomm2_lpi2c2 {
	status = "disabled";
};

&flexcomm2_lpuart2 {
	status = "disabled";
};

&flexcomm3 {
	status = "okay";
};

&flexcomm4 {
	status = "okay";
};

&flexcomm4_lpuart4 {
	status = "okay";
};

&flexcomm7 {
	status = "okay";
};

&flexcomm7_lpspi7 {
	pinctrl-0 = <&pinmux_flexcomm7_lpspi>;
	pinctrl-names = "default";
	status = "okay";
	/* CS must remain low for the entire duration of the serial communication. */
	/* After the serial communication is finished, always wait four or more tCLK periods before taking CS high.*/
	/* That is 4*514e-9 = 2.056us*/
	pcs-sck-delay = <2500>; //Delay in nanoseconds from the chip select assert to the first clock

	/* The chip select must be deasserted at least 4 tCLK periods after the last clock edge. */
	/* That is 4*514e-9 = 2.056us */
	sck-pcs-delay = <2500>; //Delay in nanoseconds from the last clock edge to the chip select

	/* Gap between last clock of each word must be more than tsdecode 9.5.2.9 */
	/* if CLK is 2.048 MHz, then tSDECODE (4 × tCLK) is 2.056 µs. */
	transfer-delay = <2500>; //Delay in nanoseconds between last SCK edge of a transfer word and the first SCK edge of the next transfer word.
	ads1298: ads1298@0 {
		compatible = "ti,ads1298";
		status = "okay";
		reg = <0x0>;
		spi-max-frequency = <10000000>; /* Can go higher */
		//	spi-min-frequency = <500000>; /* Can go higher */
	};

};


//&flexcomm7_lpi2c7 {
//	status = "okay";
//};

&flexcomm8 {
	status = "okay";
};

&flexcomm8_lpspi8 {
	pinctrl-0 = <&pinmux_flexcomm8_lpspi>;
	pinctrl-names = "default";
	status = "okay";
	pcs-sck-delay = <2800>; //Delay in nanoseconds from the chip select assert to the first clock (DS=2.5us)
	sck-pcs-delay = <150>; //Delay in nanoseconds from the last clock edge to the chip select (DS=100ns)
	//	transfer-delay = <2500>; //Delay in nanoseconds between last SCK edge of a transfer word and the first SCK edge of the next transfer word.

	abp2s: abp2s@0 {
		compatible = "honeywell,abp2s";
		status = "okay";
		reg = <0x0>;
		spi-max-frequency = <200000>; /* Can go higher */
		min-pressure-millipsi = <0>;
		max-pressure-millipsi = <1000>;
	};

};



&flexspi {
	status = "okay";
};


&dac0 {
	status = "okay";
};

&enet {
	status = "disabled";
};

&enet_mac {
	status = "disabled";
};

&enet_mdio {
	status = "disabled";
};

&wwdt0 {
	status = "okay";
};

&flexpwm1_pwm0 {
	status = "disabled";
//	pinctrl-0 = <&pinmux_flexpwm1_pwm0>;
//	pinctrl-names = "default";
};
&flexpwm1_pwm1 {
	status = "disabled";
};
&flexpwm1_pwm2 {
	status = "disabled";
};

&flexcan0 {
	status = "disabled";
//	pinctrl-0 = <&pinmux_flexcan0>;
//	pinctrl-names = "default";
};

&ctimer0 {
	status = "okay";
};

&usdhc0 {
	status = "okay";
	sdmmc {
		compatible = "zephyr,sdmmc-disk";
		disk-name = "SD";
		status = "okay";
	};
};

&vref {
	status = "okay";
};

&lpadc0 {
	status = "okay";
};

zephyr_udc0: &usb1 {
	status = "okay";
	phy-handle = <&usbphy1>;
};

&usbphy1 {
	status = "okay";
	tx-d-cal = <4>;
	tx-cal-45-dp-ohms = <7>;
	tx-cal-45-dm-ohms = <7>;
};

&lpcmp0 {
	status = "okay";
};

&lptmr0 {
	status = "okay";
};

&i3c1 {
	status = "okay";
};

&flexio0 {
	status = "okay";
};

&mrt0_channel0 {
	status = "okay";
};

&rtc {
	status = "okay";
};

&sc_timer {
	status = "disabled";
//	pinctrl-0 = <&pinmux_sctimer>;
//	pinctrl-names = "default";
};

&sai1 {
	status = "okay";
};
&sai0 {
	status = "okay";
};


&flexcomm1_lpspi1 {
	pinctrl-0 = <&pinmux_flexcomm1_lpspi>;
	pinctrl-names = "default";
};

&flexcomm4_lpuart4 {
	current-speed = <115200>;
	pinctrl-0 = <&pinmux_flexcomm4_lpuart>;
	pinctrl-names = "default";
};


//zephyr_mipi_dbi_parallel: &flexio0_lcd {
//	/* DMA channels 0, muxed to FlexIO TX */
//	dmas = <&edma0 0 61>;
//	dma-names = "tx";
//	shifters-count = <8>;
//	timers-count = <1>;
//	enwr-pin = <1>;
//	rd-pin = <0>;
//	data-pin-start = <16>;
//	reset-gpios = <&gpio4 7 GPIO_ACTIVE_HIGH>;
//	cs-gpios = <&gpio0 12 GPIO_ACTIVE_HIGH>;
//	rs-gpios = <&gpio0 7 GPIO_ACTIVE_HIGH>;
//	pinctrl-0 = <&pinmux_flexio_lcd>;
//	pinctrl-names = "default";
//};


/* SmartDMA is used for video driver on this board */
&smartdma {
	status = "okay";
	program-mem = <0x4000000>;
	//	video_sdma: video-sdma {
	//		status = "okay";
	//		compatible = "nxp,video-smartdma";
	//		pinctrl-0 = <&pinmux_smartdma_camera>;
	//		pinctrl-names = "default";
	////		sensor = <&ov7670>;
	//		vsync-pin = <4>;
	//		hsync-pin = <11>;
	//		pclk-pin = <5>;
	//	};
};


/*
 * MCXN947 board uses OS timer as the kernel timer
 * In case we need to switch to SYSTICK timer, then
 * replace &os_timer with &systick
 */
&os_timer {
	status = "disabled";
};

&systick {
	status = "okay";
};

&sram {
	sramg: memory@20050000 {
		compatible = "mmio-sram";
		reg = <0x20050000 DT_SIZE_K(64)>;
	};
	sramh: memory@20060000 {
		compatible = "mmio-sram";
		reg = <0x20060000 DT_SIZE_K(32)>;
	};
};

&flash {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		/*
		 * Partition sizes must be aligned
		 * to the flash memory sector size of 8KB.
		 */
		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x00000000 DT_SIZE_K(80)>;
		};
		/* For the MCUBoot "upgrade only" method,
		 * the slot sizes must be equal.
		 */
		slot0_partition: partition@14000 {
			label = "image-0";
			reg = <0x00014000 DT_SIZE_K(984)>;
		};
		slot1_partition: partition@10A000 {
			label = "image-1";
			reg = <0x0010A000 DT_SIZE_K(984)>;
		};
		/* storage_partition is placed in WINBOND flash memory*/
	};
};
