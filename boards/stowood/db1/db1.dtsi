#include "db1-pinctrl.dtsi"
#include <zephyr/dt-bindings/i2c/i2c.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>

/ {
	chosen {
//		zephyr,display = &dummy_dc;
		zephyr,display = &st7789v;
	};

	aliases{
		led0 = &debug_led_0;
		led1 = &debug_led_1;
		led2 = &debug_led_2;
		led3 = &debug_led_3;

		user-red = &red_led;
		user-green = &green_led;
		user-blue = &blue_led;
		power-ven-sys-base = &power_ven_sys_base;
		power-ven-storage = &power_ven_storage;
		power-ven-ble = &power_ven_ble;
		power-ven-sys = &power_ven_sys;
		power-ven-bat = &power_ven_bat;

		rip-en = &rip_en;
		exg-nrst = &exg_nrst;
		exg-clksel = &exg_clksel;
		exg-npwdn = &exg_npwdn;
//		exg-cs-temp = &exg_cs_temp;
		exg-cs-temp = &debug_led_3;
		exg-start-conv = &exg_start_conv;

		modem-uart = &flexcomm6_lpuart6;
		modem-reset = &modem_reset;
		modem-on = &modem_on;

		hs-usb-sel = &hs_usb_sel;
		backlight = &backlight;
		display-reset = &display_reset;

		sw0 = &user_button_2;
		sw1 = &user_button_3;
		sdhc0 = &usdhc0;
		mcuboot-button0 = &user_button_2;
	};

	leds {
		compatible = "gpio-leds";
		debug_led_0: dbg_0 {
			gpios = <&gpio4 12 GPIO_ACTIVE_LOW>;
			label = "Debug LED 0";
		};
		debug_led_1: dbg_1 {
			gpios = <&gpio4 13 GPIO_ACTIVE_LOW>;
			label = "Debug LED 1";
		};
		debug_led_2: dbg_2 {
			gpios = <&gpio4 16 GPIO_ACTIVE_LOW>;
			label = "Debug LED 2";
		};
		debug_led_3: dbg_3 {
			gpios = <&gpio4 15 GPIO_ACTIVE_LOW>;
			label = "Debug LED 3";
		};

		red_led: red {
			gpios = <&gpio3 18 GPIO_ACTIVE_LOW>;
			label = "Red LED";
		};
		green_led: green {
			gpios = <&gpio3 19 GPIO_ACTIVE_LOW>;
			label = "Green LED";
		};
		blue_led: blue {
			gpios = <&gpio2 10 GPIO_ACTIVE_LOW>;
			label = "Blue LED";
		};

		power_ven_sys_base: power_ven_sys_base {
			gpios = <&gpio5 8 GPIO_ACTIVE_HIGH>;
			label = "Power V_EN_SYS_BASE";
		};
		power_ven_storage: power_ven_storage {
			gpios = <&gpio1 22 GPIO_ACTIVE_HIGH>;
			label = "Power V_EN_STORAGE";
		};
		power_ven_ble: power_ven_ble {
			gpios = <&gpio1 23 GPIO_ACTIVE_HIGH>;
			label = "Power V_EN_BLE";
		};
		power_ven_sys: power_ven_sys {
			gpios = <&gpio2 11 GPIO_ACTIVE_HIGH>;
			label = "Power V_EN_SYS";
		};
		power_ven_bat: power_ven_bat {
			gpios = <&gpio0 7 GPIO_ACTIVE_HIGH>;
			label = "Power V_EN_BAT";
		};
		rip_en: rip_en {
			gpios = <&gpio1 2 GPIO_ACTIVE_HIGH>;
			label = "RIP_EN";
		};
		exg_nrst: exg_nrst {
			gpios = <&gpio0 11 GPIO_ACTIVE_HIGH>;
			label = "EXG_nRST";
		};
		exg_clksel: exg_clksel {
			gpios = <&gpio0 9 GPIO_ACTIVE_HIGH>;
			label = "EXG_CLKSEL";
		};
		exg_npwdn: exg_npwdn {
			gpios = <&gpio0 13 GPIO_ACTIVE_HIGH>;
			label = "EXG_nPWDN";
		};
		exg_cs_temp: exg_cs_temp { /* This shouold be passed to driver via device tree */
			gpios = <&gpio3 5 GPIO_ACTIVE_HIGH>;
			label = "EXG_CS_TEMP";
		};
		exg_start_conv: exg_start_conv {
			gpios = <&gpio1 10 GPIO_ACTIVE_HIGH>;
			label = "EXG_START_CONV";
		};
		modem_reset: modem_reset { /* Assert to reset */
			gpios = <&gpio4 17 GPIO_ACTIVE_HIGH>;
			label = "modem Reset";
		};
		modem_on: modem_on { /* Assert to power on */
			gpios = <&gpio4 19 GPIO_ACTIVE_LOW>;
			label = "modem Power Enable";
		};
        hs_usb_sel: hs_usb_sel {
			gpios = <&gpio1 16 GPIO_ACTIVE_HIGH>;
			label = "HS USB Mux Select";
		};
		backlight: backlight {
			gpios = <&gpio3 12 GPIO_ACTIVE_HIGH>;
			label = "Display Backlight";
		};
		display_reset: display_reset {
			gpios = <&gpio4 7 GPIO_ACTIVE_LOW>;
			label = "Display Reset";
		};

	};

	gpio_keys {
		compatible = "gpio-keys";
		user_button_2: button_0 {
			label = "User SW2";
			gpios = <&gpio0 23 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
			zephyr,code = <INPUT_KEY_0>;
			status = "disabled";
		};
		user_button_3: button_1 {
			label = "User SW3";
			gpios = <&gpio0 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
			zephyr,code = <INPUT_KEY_1>;
			status = "disabled";
		};
	};

	mipi_dbi {
		compatible = "zephyr,mipi-dbi-spi";
		dc-gpios = <&gpio4 22 GPIO_ACTIVE_HIGH>;
		reset-gpios = <&gpio4 7 GPIO_ACTIVE_LOW>;   /* Reset pin for MIPI DBI */
		spi-dev = <&flexcomm5_lpspi5>;
		write-only;
		#address-cells = <1>;
		#size-cells = <0>;

		st7789v:st7789v@0 {
			compatible = "sitronix,st7789v";
//			mipi-max-frequency = <20000000>;
			mipi-max-frequency = <2000000>;
			reg = <0>;
			width = <240>;
			height = <320>;
			x-offset = <0>;
			y-offset = <0>;
			vcom = <0x2b>;
			gctrl = <0x35>;
			vrhs = <0x11>;
			vdvs = <0x20>;
			mdac = <0x88>; //this is MADCTL
			gamma = <0x01>;/* IC default, not specced in display DS */
			inversion-off;  /* Disable display inversion */
//			colmod = <0x66>; /* Display datasheet example*/
			colmod = <0x55>; /* Match CONFIG_ST7789V_RGB565*/
			lcm = <0x2c>;
			porch-param = [0c 0c 00 33 33];
			cmd2en-param = [5a 69 02 01];
			pwctrl1-param = [a4 a1];
			pvgam-param = [D0 00 05 0E 15 0D 37 43 47 09 15 12 16 19];
			nvgam-param = [D0 00 05 0D 0C 06 2D 44 40 0E 1C 18 16 19];
			ram-param = [00 F0];
			rgb-param = [CD 08 14]; //sample value
//			rgb-param = [40 02 14]; // default value
			mipi-mode = "MIPI_DBI_MODE_SPI_4WIRE";
		};
	};

};

&flexcomm1_lpspi1 {
	pinctrl-0 = <&pinmux_flexcomm1_lpspi>;
	pinctrl-names = "default";
	status = "okay";
	lsm6dso: lsm6dso@0 {
		compatible = "st,lsm6dso";
		status = "okay";
		reg = <0x0>;
		irq-gpios = <&gpio0 20 GPIO_ACTIVE_LOW>;
		spi-max-frequency = <1000000>; /* Can go higher */
		accel-pm = <0>; /* Normal mode */
		accel-range = <0>; /* 2g */
		accel-odr = <1>; /* 12.5Hz */
	};
};

&flexcomm5_lpspi5 {
	pinctrl-0 = <&pinmux_flexcomm5_lpspi>;
	pinctrl-names = "default";
	status = "okay";
	//cs-gpios = <&gpio1 7 GPIO_ACTIVE_LOW>;  /* CS pin for display */
};

//&flexcomm2_lpuart2 {
//	current-speed = <115200>;
//	pinctrl-0 = <&pinmux_flexcomm2_lpuart>;
//	pinctrl-names = "default";
//};

&flexcomm3_lpi2c3 {
	pinctrl-0 = <&pinmux_flexcomm3_lpi2c>;
	pinctrl-names = "default";
	clock-frequency = <I2C_BITRATE_STANDARD>;
	
	bq27421@55 {
		compatible = "ti,bq274xx";
		reg = <0x55>;
		design-voltage = <3700>;
		design-capacity = <1800>;
		taper-current = <45>;
		terminate-voltage = <3000>;
	};
	veml6030@10 {
		compatible = "vishay,veml6030";
		reg = <0x10>;
		status = "okay";
		label = "Ambient Light Sensor";
		/*int-gpios = <&gpio1 15 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;*/
	};
	audio_codec: max9867@18{
		compatible = "maxim,max9867";
		reg = <0x18>;
		clocks = <&syscon MCUX_AUDIO_MCLK>; /* Ideally this would come via syscon but that seems to be broken */
		clock-names = "mclk";
	};
};

/* Debug Uart*/
&flexcomm4_lpuart4 {
	current-speed = <1000000>;
	pinctrl-0 = <&pinmux_flexcomm4_lpuart>;
	pinctrl-names = "default";
};

&flexcomm6_lpuart6 {
	current-speed = <115200>;
	hw-flow-control;
	pinctrl-0 = <&pinmux_flexcomm6_lpuart>;
	pinctrl-names = "default";
	/*
	modem: modem {
		   compatible = "u-blox,lara-r6";
		   mdm-power-gpios = <&gpio4 19 GPIO_ACTIVE_LOW>;
		   mdm-reset-gpios = <&gpio4 17 GPIO_ACTIVE_LOW>;
		   status = "okay";
		};
	*/
};

&flexcomm7_lpspi7 {
	pinctrl-0 = <&pinmux_flexcomm7_lpspi>;
	pinctrl-names = "default";
	status = "okay";
	/* CS must remain low for the entire duration of the serial communication. */
	/* After the serial communication is finished, always wait four or more tCLK periods before taking CS high.*/
	/* That is 4*514e-9 = 2.056us*/
	pcs-sck-delay = <2500>; //Delay in nanoseconds from the chip select assert to the first clock

	/* The chip select must be deasserted at least 4 tCLK periods after the last clock edge. */
	/* That is 4*514e-9 = 2.056us */
	sck-pcs-delay = <2500>; //Delay in nanoseconds from the last clock edge to the chip select

	/* Gap between last clock of each word must be more than tsdecode 9.5.2.9 */
	/* if CLK is 2.048 MHz, then tSDECODE (4 × tCLK) is 2.056 µs. */
	transfer-delay = <2500>; //Delay in nanoseconds between last SCK edge of a transfer word and the first SCK edge of the next transfer word.
ads1298: ads1298@0 {
	compatible = "ti,ads1298";
	status = "okay";
	reg = <0x0>;
	spi-max-frequency = <10000000>; /* Can go higher */
//	spi-min-frequency = <500000>; /* Can go higher */
};

};

//&flexcomm7_lpi2c7 {
//	pinctrl-0 = <&pinmux_flexcomm7_lpi2c>;
//	pinctrl-names = "default";
//	clock-frequency = <I2C_BITRATE_STANDARD>;
//};


&flexcomm8_lpspi8 {
	pinctrl-0 = <&pinmux_flexcomm8_lpspi>;
	pinctrl-names = "default";
	status = "okay";
	pcs-sck-delay = <2800>; //Delay in nanoseconds from the chip select assert to the first clock (DS=2.5us)
	sck-pcs-delay = <150>; //Delay in nanoseconds from the last clock edge to the chip select (DS=100ns)
//	transfer-delay = <2500>; //Delay in nanoseconds between last SCK edge of a transfer word and the first SCK edge of the next transfer word.

	abp2s: abp2s@0 {
		compatible = "honeywell,abp2s";
		status = "okay";
		reg = <0x0>;
		spi-max-frequency = <200000>; /* Can go higher */
		min-pressure-millipsi = <0>;
		max-pressure-millipsi = <1000>;
	};

};


/* SmartDMA is used for video driver on this board */
&smartdma {
	status = "okay";
	program-mem = <0x4000000>;
//	video_sdma: video-sdma {
//		status = "okay";
//		compatible = "nxp,video-smartdma";
//		pinctrl-0 = <&pinmux_smartdma_camera>;
//		pinctrl-names = "default";
////		sensor = <&ov7670>;
//		vsync-pin = <4>;
//		hsync-pin = <11>;
//		pclk-pin = <5>;
//	};
};

/*
 * MCXN947 board uses OS timer as the kernel timer
 * In case we need to switch to SYSTICK timer, then
 * replace &os_timer with &systick
 */
&os_timer {
	status = "disabled";
};

&systick {
	status = "okay";
};

&sram {
	sramg: memory@20050000 {
		compatible = "mmio-sram";
		reg = <0x20050000 DT_SIZE_K(64)>;
	};
	sramh: memory@20060000 {
		compatible = "mmio-sram";
		reg = <0x20060000 DT_SIZE_K(32)>;
	};
};

&flash {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		/*
		 * Partition sizes must be aligned
		 * to the flash memory sector size of 8KB.
		 */
		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x00000000 DT_SIZE_K(80)>;
		};
		/* For the MCUBoot "upgrade only" method,
		 * the slot sizes must be equal.
		 */
		slot0_partition: partition@14000 {
			label = "image-0";
			reg = <0x00014000 DT_SIZE_K(984)>;
		};
		slot1_partition: partition@10A000 {
			label = "image-1";
			reg = <0x0010A000 DT_SIZE_K(984)>;
		};
		/* storage_partition is placed in WINBOND flash memory*/
	};
};

&flexspi {
	pinctrl-0 = <&pinmux_flexspi>;
	pinctrl-names = "default";
	ahb-prefetch;
	ahb-bufferable;
	ahb-cacheable;
	ahb-read-addr-opt;
	combination-mode;
	rx-clock-source = <1>;

	/* WINBOND flash memory*/
	w25q64jvssiq: w25q64jvssiq@0 {
		compatible = "nxp,imx-flexspi-nor";
		status = "disabled";
		size = <67108864>;
		reg = <0>;
		spi-max-frequency = <133000000>;
		jedec-id = [ef 40 17];
		erase-block-size = <4096>;
		write-block-size = <1>;
		cs-interval-unit = <1>;
		cs-interval = <2>;
		cs-hold-time = <3>;
		cs-setup-time = <3>;
		data-valid-time = <2>;
		column-space = <0>;
	};
};

&dac0 {
	pinctrl-0 = <&pinmux_dac0>;
	pinctrl-names = "default";
};

//&sai1 {
//	pinctrl-0 = <&pinmux_sai1>;
//	pinctrl-names = "default";
//};

//&sai0 {
//	pinctrl-0 = <&pinmux_sai0>;
//	pinctrl-names = "default";
//};

&enet {
	pinctrl-0 = <&pinmux_enet_qos>;
	pinctrl-names = "default";
};

&enet_mac {
	phy-connection-type = "rmii";
	zephyr,random-mac-address;
	phy-handle = <&phy>;
};

&enet_mdio {
	phy: ethernet-phy@0 {
		compatible = "ethernet-phy";
		reg = <0>;
		status = "okay";
	};
};

&flexpwm1_pwm0 {
	pinctrl-0 = <&pinmux_flexpwm1_pwm0>;
	pinctrl-names = "default";
};

&usdhc0 {
	pinctrl-0 = <&pinmux_usdhc0>;
	pinctrl-1 = <&pinmux_usdhc0>;
	pinctrl-2 = <&pinmux_usdhc0>;
	cd-gpios = <&gpio2 1 GPIO_ACTIVE_LOW>;
	pinctrl-names = "default", "slow", "med";
	no-1-8-v;
};

&lpadc0 {
	pinctrl-0 = <&pinmux_lpadc0>;
	pinctrl-names = "default";
};

zephyr_mipi_dbi_parallel: &flexio0_lcd {
	/* DMA channels 0, muxed to FlexIO TX */
	dmas = <&edma0 0 61>;
	dma-names = "tx";
	shifters-count = <8>;
	timers-count = <1>;
	enwr-pin = <1>;
	rd-pin = <0>;
	data-pin-start = <16>;
	reset-gpios = <&gpio4 7 GPIO_ACTIVE_HIGH>;
	cs-gpios = <&gpio0 12 GPIO_ACTIVE_HIGH>;
	rs-gpios = <&gpio0 7 GPIO_ACTIVE_HIGH>;
	pinctrl-0 = <&pinmux_flexio_lcd>;
	pinctrl-names = "default";
};

&lpcmp0 {
	pinctrl-0 = <&pinmux_lpcmp0>;
	pinctrl-names = "default";
};

&i3c1 {
	pinctrl-0 = <&pinmux_i3c1>;
	pinctrl-names = "default";
};

&flexcan0 {
	pinctrl-0 = <&pinmux_flexcan0>;
	pinctrl-names = "default";
};

&sc_timer {
	pinctrl-0 = <&pinmux_sctimer>;
	pinctrl-names = "default";
};
